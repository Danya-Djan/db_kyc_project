volumes:
  db_data: {}
  batcher_db_data: {}
  redis_data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./backend:/app
    command: /start.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file:
      - .env/dev/pg
      - .env/dev/back
      - .env/dev/rmq
      - .env/dev/bot
      - .env/dev/web
    ports:
      - '8000:8000'

  postgres:
    image: postgres:14.5-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env/dev/pg
    ports:
      - '5432:5432'

  celery:
    build: ./backend
    command: celery -A clicker worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - .env/dev/back
      - .env/dev/rmq
      - .env/dev/pg
      - .env/dev/bot
      - .env/dev/web
    depends_on:
      - backend
      - rabbitmq

  celery-beat:
    build: ./backend
    command: celery -A clicker beat -l info
    volumes:
      - ./backend:/app
    env_file:
      - .env/dev/back
      - .env/dev/rmq
      - .env/dev/pg
      - .env/dev/bot
      - .env/dev/web
    depends_on:
      - backend
      - rabbitmq

  rabbitmq:
    container_name: 'rabbitmq'
    image: 'rabbitmq:3-management-alpine'
    env_file:
      - .env/dev/rmq
    ports:
      - '5672:5672'
      - '15672:15672'

  redis:
    env_file:
      - .env/dev/redis
    image: redis
    command: bash -c "redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}"
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  batcher:
    build:
      context: ./batcher
    depends_on:
      - redis
      - batcher-postgres
    env_file:
      - .env/dev/rmq
      - .env/dev/redis
      - .env/dev/batcher-pg
      - .env/dev/batcher
      - .env/dev/bot
      - .env/dev/web
    ports:
      - '8080:8080'

  batcher-postgres:
    image: postgres:14.5-alpine
    volumes:
      - batcher_db_data:/var/lib/postgresql/data
    env_file:
      - .env/dev/batcher-pg
    ports:
      - '5433:5432'
