import asyncio
from aiogram import Bot, Dispatcher, types
import re
import os
import time
import shutil
import random
from create_bot import bot, request_url, important_message, url, token, bucket_name, username, password, endpoint_url
from req import check_register
import urllib.request
from messages import get_main_menu_message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

from loguru import logger

import boto3
from botocore.config import Config

def get_answer_keyboard():
    button1 = InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu')
    kb = [[button1]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard

def get_main_keyboard_inline(is_admin=False, ref_code=None):
    button1 = InlineKeyboardButton(text='üëæ –ö–ª–∏–∫–µ—Ä', web_app=WebAppInfo(url=f'{url}?referred_by={ref_code}'))
    button2 = InlineKeyboardButton(text='‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='instruction_inline')
    button3 = InlineKeyboardButton(text='üî• –ö—Ç–æ –º—ã?', web_app=WebAppInfo(url='https://test.com'))
    button4 = InlineKeyboardButton(text='–¢–ï–°–¢', callback_data='test_message')
    kb = [[button1], [button2], [button3]]
    if is_admin:
        kb.append([button4])
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard

def gen_ok_keyboard(number):
    kb = [[InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ', callback_data=f'approve_{number}'), InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å üîÑ', callback_data=f'edit_{number}')]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard

async def get_main_menu_answer(call: types.CallbackQuery):
    logger.info(f"{call.from_user.id} - @{call.from_user.username} : –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É")
    await call.message.edit_text(get_main_menu_message(), reply_markup=get_main_keyboard_inline(), parse_mode=ParseMode.MARKDOWN)
    
async def get_main_menu_after_picture(call: types.CallbackQuery):
    logger.info(f"{call.from_user.id} - @{call.from_user.username} : –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
    await call.message.delete()
    await bot.send_message(call.from_user.id, get_main_menu_message(), reply_markup=get_main_keyboard_inline(), parse_mode=ParseMode.MARKDOWN)

async def command_start(message : types.Message):
    ref_code = ''
    if message.text[7:].startswith('user_'):
        ref_code = message.text[12:]  
    if not check_register(message.from_user.id):
        
        logger.info(f"{message.from_user.id} - @{message.from_user.username} : –∫–æ–º–∞–Ω–¥–∞ /start –∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
        await bot.send_message(message.from_user.id, 'üëã', reply_markup=ReplyKeyboardRemove())
        # await asyncio.sleep(3)
        await bot.send_message(message.from_user.id, 'üëë –Ø - KYC –ö–ª–∏–∫–µ—Ä –±–æ—Ç! –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–∞–ª–ª—ã –∫–ª–∏–∫–∞–º–∏, –ø–æ–¥–Ω–∏–º–∞–π—Å—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã. –†–∞–∑–≤–∏–≤–∞–π—Å—è –±—ã—Å—Ç—Ä–µ–µ —Å –Ω–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤!', reply_markup=ReplyKeyboardRemove())
        # await asyncio.sleep(3)
        await bot.send_message(message.from_user.id, 'üéÅ –ò—Å–ø–æ–ª—å–∑—É–π –±–∞–ª–ª—ã –≤ –∞—É–∫—Ü–∏–æ–Ω–µ –∑–∞ —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã! –ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –º–Ω–æ–≥–æ, –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –±–∏—Ç–≤—É –∫–ª–∏–∫–æ–≤!', reply_markup=ReplyKeyboardRemove())
        # await asyncio.sleep(3)
        await bot.send_message(message.from_user.id, 'üëØ –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å % —Å –∫–ª–∏–∫–æ–≤ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ –±–∞–ª–ª–æ–≤ –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞. ', reply_markup=ReplyKeyboardRemove())
        # await asyncio.sleep(3)
        await bot.send_message(message.from_user.id, 'üçÄ –£–¥–∞—á–∏ –≤ –±–∏—Ç–≤–µ!', reply_markup=ReplyKeyboardRemove())
        # await asyncio.sleep(3)
    else:
        logger.info(f"{message.from_user.id} - @{message.from_user.username} : –∫–æ–º–∞–Ω–¥–∞ /start")
        
    await bot.send_message(message.from_user.id, get_main_menu_message(), reply_markup=get_main_keyboard_inline(ref_code=ref_code), parse_mode=ParseMode.MARKDOWN)